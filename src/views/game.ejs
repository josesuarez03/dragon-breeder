<div class="container">
    <h1>Granja de Dragones</h1>

    <div class="card">
        <div class="imageCard">
            <% if (character && character.imageUrl) { %>
                <img src="<%= character.imageUrl %>" alt="Imagen de <%= character.name %>" class="dragon-image">
            <% } else { %>
                <img src="/sprites/dragons/adult-dragon.png" alt="Imagen del dragón" class="dragon-image">
            <% } %>
        </div>

        <div class="cardContent">
            <% if (character) { %>
                <h2 class="name-character"><%= character.name %></h2>
                <span class="type-dragon"><%= character.type %></span>

                <ul class="table-attributes">
                    <li class="attributesItem">
                        <span class="energyLevel"><%= character.energy %> ⚡</span>
                    </li>
                    <li class="attributesItem">
                        <span class="healthLevel"><%= character.health %> ❤️</span>
                    </li>
                    <li class="attributesItem">
                        <span class="availableBattle"><%= character.availableBattle ? 'Disponible para luchar' : 'No disponible para luchar' %></span>
                    </li>
                </ul>
            <% } %>
        </div>
    </div>

    <div class="action-buttons">
        <% if (character) { %>
            <button class="btn-feed" onclick="handleFeedDragon('<%= character._id %>')">Dar de Comer</button>
            <button class="btn-heal" onclick="handleHealDragon('<%= character._id %>')">Sanar</button>
            <button class="btn-train" onclick="handleTrainDragon('<%= character._id %>')">Entrenar</button>
            <button class="btn-evolve" onclick="handleEvolveDragon('<%= character._id %>')" <%= character.stage === 'adult' ? 'disabled' : '' %>>Evolucionar</button>
            <button class="btn-battle" onclick="handleStartBattle('<%= character._id %>')" <%= !character.availableForBattle ? 'disabled' : '' %>>Luchar</button>
        <% } %>
    </div>
</div>

<script>
    async function handleAction(dragonId, action) {
        try {
            const response = await fetch(`/dragon/${dragonId}/action`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ action })
            });

            const data = await response.json();
            
            if (data.success) {
                // Actualizar los valores en la interfaz
                updateDragonStats(data.dragon);
            } else {
                console.error('Error:', data.message);
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }

    function updateDragonStats(dragon) {
        // Actualizar valores en la interfaz
        document.querySelector('.energyLevel').textContent = `${dragon.energy} ⚡`;
        document.querySelector('.healthLevel').textContent = `${dragon.health} ❤️`;
        
        // Actualizar estado de batalla
        const battleStatus = dragon.availableForBattle ? 'Disponible para luchar' : 'No disponible para luchar';
        document.querySelector('.availableBattle').textContent = battleStatus;
        
        // Actualizar estado de los botones
        document.querySelector('.btn-battle').disabled = !dragon.availableForBattle;
        document.querySelector('.btn-evolve').disabled = dragon.stage === 'adult';
    }

    // Reemplazar las funciones handle existentes
    async function handleFeedDragon(dragonId) {
        await handleAction(dragonId, 'feed');
    }

    async function handleHealDragon(dragonId) {
        await handleAction(dragonId, 'heal');
    }

    async function handleTrainDragon(dragonId) {
        await handleAction(dragonId, 'train');
    }

    async function handleEvolveDragon(dragonId) {
        await handleAction(dragonId, 'evolve');
    }
</script>
